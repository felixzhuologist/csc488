Contributions of each team member:

##### Jeffrey
- Implemented part of the Semantic checks for Boolean types
- Added passing and failing test cases for boolean type checks, and other semantic checks
- Debugged semantic checks for Scope, Function, and Procedure semantic checks

##### Atheed
- Designed and implemented the symbol table class for semantic analysis, and the various symbol types in the grammar
- Wrote up the symbol table design document
- Helped modify, design, and debug the parser to generate a complete AST

##### Evan
- Designed and implemented the AST building and generation from the .cup file to a complete AST
- Helped with the design and implementation of the symbol table and the symbol type classes
- Wrote up the AST design document

##### Felix M 
- Implemented traversal of AST for semantic analysis
- Helped implement semantic analysis for scopes and program

##### Felix Z
- Designed/Implemented semantic analysis
- Wrote semantic analysis test cases
- Wrote semantic analysis design doc
- Updated test script from a2 to run a3 tests